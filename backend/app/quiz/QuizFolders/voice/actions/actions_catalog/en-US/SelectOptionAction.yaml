tags:
  - choose
  - select
  - go for
  - block
  - option
  - response
  - item

callback:
  request: POST
  url: http://localhost:3000/answer
  arguments:
    - answer

parse_callback_arguments_from_transcript: |
  import re

  extensiveNumbers: [(int, str)] = [
      (1, "one"),
      (2, "two"),
      (3, "three"),
      (4, "four"),
      (5, "five"),
      (6, "six"),
      (7, "seven"),
      (8, "eigth"),
      (9, "nine"),
  ]

  def parse(transcript: str):
    numbers: [int] = [int(s) for s in re.findall(r'\b\d+\b', transcript)]

    if len(numbers) > 0:
        return [numbers[0]]

    for (number, extensiveNumber) in extensiveNumbers:
        if extensiveNumber in transcript:
            return [number]

    raise ValueError('No number present in transcript "{}"'.format(transcript))
